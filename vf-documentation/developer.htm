<!DOCTYPE html>
<html>
<head>
    <title></title>
</head>
<body>
<h1>Developer Installation</h1>
<p>Magento's extension system utilizes a complex directory structure. Due to this, there are many points in the Magento directory strucutre in which we must add files. Normally this is done via unzipping. However when we develop the extension we do not unzip the extension over Magento like a normal install. We keep the paths separate & use symlinks. This way our version control system [git] does not try to track Magento's files.</p>
<p>Before creating the symlinks, we must tell Magento to follow them for the template files. <strong>System > Configuration > Developer > Template Settings > Allow Symlinks </strong>, set this to <strong>yes</strong> and press 'Save Config'.</p>

<pre>cd ~/www
git clone git@github.com:vehiclefits/Vehicle-Fits-Magento.git

cd ~/www/magento/app/code/local
ln -s ~/www/Vehiclefits-Magento/app/code/local/Elite Elite

cd ~/www/magento/lib
ln -s ~/www/Vehicle-Fits-Magento/lib/VF VF

cd ~/www/magento/skin/adminhtml/default/default
ln -s ~/www/Vehicle-Fits-Magento/skin/adminhtml/default/default/VF/

cd ~/www/magento/app/design/adminhtml/default/default/template/
ln -s ~/www/Vehicle-Fits-Magento/app/design/adminhtml/default/default/template/vf/
</pre>
This assumes you have Magento installed at ~/www/magento/. We check out the Vehicle Fits repository in ~/www/, we then create symlinks from the points in Magento's directory tree in which our extension normally adds files via unzipping. See the screenshot below showing on the left the Magento installation with symlinks into the file structure from the right which only contains our extension. <br />
<img src="developer-paths.png" />

<h1>Unit Tests</h1>
<p>cd to the app/code/local/Elite directory and run `phpunit`. The configuration is read from phpunit.xml.dist</p>
<p>The tests are each wrapped in a transaciton that gets rolled back. In each test case, in the doSetUp() method the schema should be specified (year,make,model for example). If the schema differs from the current database's schema, a reset of the tables is forced. If a unit test fails at an unfortunate time, the tables could not all be created. To force a database reset run ` php tasks/schema.php`.</p>

<h1>Command Line Utilities</h1>
<p>In app/code/local/Elite are various utilities.</p>
<h2>Schema</h2>
<p>To reset the schema to a new schema do this:<br />
php tasks/schema.php --force --levels="make,model,year" <br /><br />
To add a new schema do this:<br />
php tasks/schema.php --add --levels="foo,bar"<br /><br />
You must create the first schema before creating an additional one with the --add flag.
</p>
<h2>Import/Export</h2>

</body>
</html>
